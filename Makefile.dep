# include board specific application dependencies
-include $(APPDIR)/Makefile.board.dep

# include board dependencies
-include $(BOARDDIR)/Makefile.dep

# include cpu dependencies
-include $(RIOTCPU)/$(CPU)/Makefile.dep

# include external modules dependencies
# processed before RIOT ones to be evaluated before the 'default' rules.
-include $(EXTERNAL_MODULE_DIRS:%=%/Makefile.dep)

# pull dependencies from sys and drivers
include $(RIOTBASE)/sys/Makefile.dep
include $(RIOTBASE)/drivers/Makefile.dep

# pull Makefile.dep of each driver modules if they exist
-include $(sort $(USEMODULE:%=$(RIOTBASE)/drivers/%/Makefile.dep))

# pull dependencies from packages
-include $(USEPKG:%=$(RIOTPKG)/%/Makefile.dep)

ifneq (,$(filter mpu_stack_guard,$(USEMODULE)))
  FEATURES_REQUIRED += cortexm_mpu
endif

ifneq (,$(filter mpu_noexec_ram,$(USEMODULE)))
  FEATURES_REQUIRED += cortexm_mpu
endif

<<<<<<< HEAD
=======
ifneq (,$(filter auto_init_gnrc_netif,$(USEMODULE)))
  USEMODULE += gnrc_netif_init_devs
endif

ifneq (,$(filter auto_init_saul,$(USEMODULE)))
  USEMODULE += saul_init_devs
endif

ifneq (,$(filter base64url,$(USEMODULE)))
  USEMODULE += base64
endif

ifneq (,$(filter csma_sender,$(USEMODULE)))
  USEMODULE += random
  USEMODULE += xtimer
endif

ifneq (,$(filter dhcpv6_%,$(USEMODULE)))
  USEMODULE += dhcpv6
endif

ifneq (,$(filter dhcpv6_client,$(USEMODULE)))
  USEMODULE += event
  USEMODULE += random
  USEMODULE += xtimer
endif

ifneq (,$(filter gnrc_mac,$(USEMODULE)))
  USEMODULE += gnrc_priority_pktqueue
  USEMODULE += csma_sender
  USEMODULE += evtimer
  ifneq (,$(filter gnrc_netif,$(USEMODULE)))
    USEMODULE += gnrc_netif_mac
  endif
endif

# Don't register netdevs if there is only a single one  of them
ifeq (,$(filter gnrc_netif_single,$(USEMODULE)))
  USEMODULE += netdev_register
endif

ifneq (,$(filter gnrc_gomach,$(USEMODULE)))
  USEMODULE += gnrc_netif
  USEMODULE += gnrc_nettype_gomach
  USEMODULE += random
  USEMODULE += xtimer
  USEMODULE += gnrc_mac
  FEATURES_REQUIRED += periph_rtt
endif

ifneq (,$(filter gnrc_lorawan,$(USEMODULE)))
  USEMODULE += xtimer
  USEMODULE += random
  USEMODULE += hashes
  USEMODULE += crypto_aes
  USEMODULE += netdev_layer
  USEMODULE += gnrc_neterr
  USEMODULE += gnrc_nettype_lorawan
endif

ifneq (,$(filter sntp,$(USEMODULE)))
  USEMODULE += sock_udp
  USEMODULE += xtimer
endif

ifneq (,$(filter ieee802154_radio_hal,$(USEMODULE)))
  USEMODULE += ieee802154
endif

ifneq (,$(filter gnrc_netdev_default,$(USEMODULE)))
  USEMODULE += netdev_default
  USEMODULE += gnrc_netif
endif

ifneq (,$(filter netdev_ieee802154,$(USEMODULE)))
  USEMODULE += ieee802154
  USEMODULE += random
endif

ifneq (,$(filter gnrc_dhcpv6_%, $(USEMODULE)))
  USEMODULE += gnrc_dhcpv6
endif

ifneq (,$(filter gnrc_dhcpv6_client,$(USEMODULE)))
  USEMODULE += dhcpv6_client
  USEMODULE += gnrc_ipv6_nib
  USEMODULE += gnrc_netif
  USEMODULE += gnrc_sock_udp
endif

ifneq (,$(filter gnrc_dhcpv6_client_6lbr,$(USEMODULE)))
  USEMODULE += gnrc_dhcpv6_client
endif

ifneq (,$(filter gnrc_uhcpc,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_uhcpc
  USEMODULE += uhcpc
  USEMODULE += gnrc_sock_udp
  USEMODULE += fmt
endif

ifneq (,$(filter uhcpc,$(USEMODULE)))
  USEMODULE += posix_inet
endif

ifneq (,$(filter gnrc_%,$(filter-out gnrc_netapi gnrc_netreg gnrc_netif% gnrc_pkt%,$(USEMODULE))))
  USEMODULE += gnrc
endif

ifneq (,$(filter gnrc_sock_%,$(USEMODULE)))
  USEMODULE += gnrc_sock
endif

ifneq (,$(filter gnrc_sock_async,$(USEMODULE)))
  USEMODULE += gnrc_netapi_callbacks
endif

ifneq (,$(filter gnrc_sock_udp,$(USEMODULE)))
  USEMODULE += gnrc_udp
  USEMODULE += random     # to generate random ports
endif

ifneq (,$(filter gnrc_sock,$(USEMODULE)))
  USEMODULE += gnrc_netapi_mbox
  USEMODULE += sock
endif

ifneq (,$(filter gnrc_netapi_mbox,$(USEMODULE)))
  USEMODULE += core_mbox
endif

ifneq (,$(filter netdev_tap,$(USEMODULE)))
  USEMODULE += netif
  USEMODULE += netdev_eth
  USEMODULE += iolist
endif

ifneq (,$(filter gnrc_rpl_p2p,$(USEMODULE)))
  USEMODULE += gnrc_rpl
endif

ifneq (,$(filter gnrc_rpl,$(USEMODULE)))
  USEMODULE += gnrc_icmpv6
  USEMODULE += gnrc_ipv6_nib
  USEMODULE += trickle
  USEMODULE += xtimer
  USEMODULE += evtimer
endif

ifneq (,$(filter trickle,$(USEMODULE)))
  USEMODULE += random
  USEMODULE += xtimer
endif

ifneq (,$(filter eui_provider,$(USEMODULE)))
  USEMODULE += luid
endif

ifneq (,$(filter gnrc_netif,$(USEMODULE)))
  USEMODULE += netif
  USEMODULE += l2util
  USEMODULE += fmt
  ifneq (,$(filter netdev_ieee802154,$(USEMODULE)))
    USEMODULE += gnrc_netif_ieee802154
  endif
  ifneq (,$(filter netdev_eth,$(USEMODULE)))
    USEMODULE += gnrc_netif_ethernet
  endif
  ifneq (,$(filter gnrc_lorawan,$(USEMODULE)))
    USEMODULE += gnrc_netif_lorawan
  endif
endif

ifneq (,$(filter gnrc_netif_bus,$(USEMODULE)))
  USEMODULE += core_msg_bus
endif

ifneq (,$(filter gnrc_netif_events,$(USEMODULE)))
  USEMODULE += core_thread_flags
  USEMODULE += event
endif

ifneq (,$(filter ieee802154 nrfmin esp_now cc110x gnrc_sixloenc,$(USEMODULE)))
  ifneq (,$(filter gnrc_ipv6, $(USEMODULE)))
    USEMODULE += gnrc_sixlowpan
  endif
  ifneq (,$(filter gnrc_ipv6_default, $(USEMODULE)))
    USEMODULE += gnrc_sixlowpan_default
  endif
  ifneq (,$(filter gnrc_ipv6_router_default, $(USEMODULE)))
    USEMODULE += gnrc_sixlowpan_router_default
  endif
  ifneq (,$(filter lwip%, $(USEMODULE)))
    USEMODULE += lwip_sixlowpan
  endif
endif

ifneq (,$(filter gnrc_sixlowpan_default,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib_6ln
  USEMODULE += gnrc_sixlowpan
  USEMODULE += gnrc_sixlowpan_frag
  USEMODULE += gnrc_sixlowpan_iphc
endif

ifneq (,$(filter gnrc_sixlowpan_router_default,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib_6lr
  USEMODULE += gnrc_sixlowpan_frag
  USEMODULE += gnrc_sixlowpan_iphc
endif

ifneq (,$(filter gnrc_sixlowpan_border_router_default,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib_6lbr
  USEMODULE += gnrc_ipv6_router_default
  USEMODULE += gnrc_sixlowpan_frag
  USEMODULE += gnrc_sixlowpan_iphc
endif

ifneq (,$(filter gnrc_sixlowpan_frag,$(USEMODULE)))
  USEMODULE += gnrc_sixlowpan
  USEMODULE += gnrc_sixlowpan_frag_fb
  USEMODULE += gnrc_sixlowpan_frag_rb
endif

ifneq (,$(filter gnrc_sixlowpan_frag_fb,$(USEMODULE)))
  USEMODULE += core_msg
endif

ifneq (,$(filter gnrc_sixlowpan_frag_rb,$(USEMODULE)))
  USEMODULE += xtimer
endif

ifneq (,$(filter gnrc_sixlowpan_frag_vrb,$(USEMODULE)))
  USEMODULE += xtimer
  USEMODULE += gnrc_sixlowpan_frag_fb
endif

ifneq (,$(filter gnrc_sixlowpan_iphc,$(USEMODULE)))
  USEMODULE += gnrc_ipv6
  USEMODULE += gnrc_sixlowpan
  USEMODULE += gnrc_sixlowpan_ctx
  USEMODULE += gnrc_sixlowpan_iphc_nhc
endif

ifneq (,$(filter gnrc_sixlowpan,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_sixlowpan
  USEMODULE += gnrc_nettype_sixlowpan
  USEMODULE += sixlowpan
  ifneq (,$(filter gnrc_netif,$(USEMODULE)))
    USEMODULE += gnrc_netif_6lo
  endif
endif

ifneq (,$(filter gnrc_sixlowpan_ctx,$(USEMODULE)))
  USEMODULE += ipv6_addr
  USEMODULE += xtimer
endif

ifneq (,$(filter gnrc_ipv6_default,$(USEMODULE)))
  USEMODULE += gnrc_ipv6
  USEMODULE += gnrc_icmpv6
endif

ifneq (,$(filter gnrc_ipv6_router_default,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_router
  USEMODULE += gnrc_icmpv6
endif

ifneq (,$(filter gnrc_ndp,$(USEMODULE)))
  USEMODULE += gnrc_icmpv6
  USEMODULE += gnrc_ipv6_hdr
  USEMODULE += gnrc_netif
endif

ifneq (,$(filter gnrc_icmpv6_echo,$(USEMODULE)))
  USEMODULE += gnrc_icmpv6
  USEMODULE += gnrc_ipv6_hdr
  USEMODULE += gnrc_netif_hdr
endif

ifneq (,$(filter gnrc_icmpv6_error,$(USEMODULE)))
  USEMODULE += gnrc_icmpv6
  USEMODULE += gnrc_ipv6_hdr
  USEMODULE += gnrc_netif_hdr
endif

ifneq (,$(filter gnrc_icmpv6,$(USEMODULE)))
  USEMODULE += inet_csum
  USEMODULE += ipv6_hdr
  USEMODULE += gnrc_nettype_icmpv6
  USEMODULE += gnrc_nettype_ipv6
  USEMODULE += icmpv6
endif

ifneq (,$(filter gnrc_rpl_srh,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_ext_rh
endif

ifneq (,$(filter gnrc_ipv6_ext_frag,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_ext
  USEMODULE += xtimer
endif

ifneq (,$(filter gnrc_ipv6_ext_opt,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_ext
endif

ifneq (,$(filter gnrc_ipv6_ext_rh,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_ext
endif

ifneq (,$(filter gnrc_ipv6_ext,$(USEMODULE)))
  USEMODULE += gnrc_nettype_ipv6
  USEMODULE += gnrc_nettype_ipv6_ext
endif

ifneq (,$(filter gnrc_ipv6_whitelist,$(USEMODULE)))
  USEMODULE += ipv6_addr
endif

ifneq (,$(filter gnrc_ipv6_blacklist,$(USEMODULE)))
  USEMODULE += ipv6_addr
endif

ifneq (,$(filter gnrc_ipv6_router,$(USEMODULE)))
  USEMODULE += gnrc_ipv6
  USEMODULE += gnrc_ipv6_nib_router
endif

ifneq (,$(filter gnrc_ipv6,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_ipv6
  USEMODULE += inet_csum
  USEMODULE += ipv6_addr
  USEMODULE += gnrc_ipv6_hdr
  USEMODULE += gnrc_ipv6_nib
  USEMODULE += gnrc_netif
  USEMODULE += gnrc_netif_ipv6
  USEMODULE += gnrc_nettype_ipv6
endif

ifneq (,$(filter gnrc_ipv6_hdr,$(USEMODULE)))
  USEMODULE += ipv6_hdr
  USEMODULE += gnrc_pktbuf
endif

ifneq (,$(filter sixlowpan,$(USEMODULE)))
  USEMODULE += ipv6_hdr
endif

ifneq (,$(filter ipv6_hdr,$(USEMODULE)))
  USEMODULE += inet_csum
  USEMODULE += ipv6_addr
endif

ifneq (,$(filter gnrc_ipv6_nib_6lbr,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib_6lr
endif

ifneq (,$(filter gnrc_ipv6_nib_6lr,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib_6ln
  USEMODULE += gnrc_ipv6_nib_router
endif

ifneq (,$(filter gnrc_ipv6_nib_6ln,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib
  USEMODULE += gnrc_sixlowpan_nd
endif

ifneq (,$(filter gnrc_ipv6_nib_dns,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib
endif

ifneq (,$(filter gnrc_ipv6_nib_router,$(USEMODULE)))
  USEMODULE += gnrc_ipv6_nib
endif

ifneq (,$(filter gnrc_ipv6_nib,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_ipv6_nib
  USEMODULE += evtimer
  USEMODULE += gnrc_ndp
  USEMODULE += gnrc_netif
  USEMODULE += gnrc_netif_ipv6
  USEMODULE += ipv6_addr
  USEMODULE += random
endif

ifneq (,$(filter gnrc_udp,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_udp
  USEMODULE += gnrc_nettype_udp
  USEMODULE += inet_csum
  USEMODULE += udp
endif

ifneq (,$(filter gnrc_tcp,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_tcp
  USEMODULE += gnrc_nettype_tcp
  USEMODULE += inet_csum
  USEMODULE += random
  USEMODULE += tcp
  USEMODULE += xtimer
  USEMODULE += core_mbox
endif

ifneq (,$(filter gnrc_pktdump,$(USEMODULE)))
  DEFAULT_MODULE += auto_init_gnrc_pktdump
  USEMODULE += gnrc_pktbuf
  USEMODULE += od
endif

ifneq (,$(filter od,$(USEMODULE)))
  USEMODULE += fmt
endif

ifneq (,$(filter od_string,$(USEMODULE)))
  USEMODULE += od
endif

ifneq (,$(filter newlib_gnu_source,$(USEMODULE)))
  USEMODULE += newlib
endif

ifneq (,$(filter newlib_nano,$(USEMODULE)))
  USEMODULE += newlib
endif

ifneq (,$(filter newlib,$(USEMODULE)))
  # allow custom newlib syscalls implementations by adding
  # newlib_syscalls_XXX to USEMODULE
  ifeq (,$(filter newlib_syscalls_%,$(USEMODULE)))
    USEMODULE += newlib_syscalls_default
  endif
endif

ifneq (,$(filter posix_select,$(USEMODULE)))
  ifneq (,$(filter posix_sockets,$(USEMODULE)))
    USEMODULE += sock_async
  endif
  USEMODULE += core_thread_flags
  USEMODULE += posix_headers
  USEMODULE += xtimer
endif

ifneq (,$(filter picolibc,$(USEMODULE)))
  # allow custom picolibc syscalls implementations by adding
  # picolibc_syscalls_XXX to USEMODULE
  ifeq (,$(filter picolibc_syscalls_%,$(USEMODULE)))
    USEMODULE += picolibc_syscalls_default
  endif
endif

ifneq (,$(filter posix_sockets,$(USEMODULE)))
  USEMODULE += bitfield
  USEMODULE += random
  USEMODULE += vfs
  USEMODULE += posix_headers
  USEMODULE += xtimer
endif

ifneq (,$(filter shell,$(USEMODULE)))
  USEMODULE += stdin
endif

# Include all stdio_% dependencies after all USEMODULE += stdio_%
include $(RIOTBASE)/makefiles/stdio.inc.mk

ifneq (,$(filter isrpipe,$(USEMODULE)))
  USEMODULE += tsrb
endif

ifneq (,$(filter isrpipe_read_timeout,$(USEMODULE)))
  USEMODULE += isrpipe
  USEMODULE += xtimer
endif

ifneq (,$(filter shell_commands,$(USEMODULE)))
  ifneq (,$(filter fib,$(USEMODULE)))
    USEMODULE += posix_inet
  endif
  ifneq (,$(filter nimble_netif,$(USEMODULE)))
    USEMODULE += nimble_scanner
    USEMODULE += nimble_scanlist
    USEMODULE += fmt
  endif
endif

ifneq (,$(filter posix_semaphore,$(USEMODULE)))
  USEMODULE += sema
  USEMODULE += xtimer
  USEMODULE += posix_headers
endif

ifneq (,$(filter posix_time,$(USEMODULE)))
  USEMODULE += xtimer
  USEMODULE += posix_headers
endif

ifneq (,$(filter posix_inet,$(USEMODULE)))
  USEMODULE += posix_headers
endif

ifneq (,$(filter lwip_sixlowpan,$(USEMODULE)))
  USEMODULE += lwip_ipv6_autoconfig
  USEMODULE += l2util
endif

ifneq (,$(filter lwip_ipv6_autoconfig lwip_ipv6_mld,$(USEMODULE)))
  USEMODULE += lwip_ipv6
endif

ifneq (,$(filter lwip_ipv6,$(USEMODULE)))
  USEMODULE += random
endif

ifneq (,$(filter lwip_udplite,$(USEMODULE)))
  USEMODULE += lwip_udp
endif

ifneq (,$(filter lwip_sock_%,$(USEMODULE)))
  USEMODULE += lwip_sock
endif

ifneq (,$(filter lwip_sock_ip,$(USEMODULE)))
  USEMODULE += lwip_raw
endif

ifneq (,$(filter lwip_sock_tcp,$(USEMODULE)))
  USEMODULE += lwip_tcp
endif

ifneq (,$(filter lwip_sock_udp,$(USEMODULE)))
  USEMODULE += lwip_udp
endif

>>>>>>> 41eca17dac... Makefile.dep: make ieee802154_radio_hal depend on ieee802154
ifneq (,$(filter lwip_%,$(USEMODULE)))
  USEPKG += lwip
endif

ifneq (,$(filter libfixmath-unittests,$(USEMODULE)))
  USEPKG += libfixmath
  USEMODULE += libfixmath
endif

ifneq (,$(filter random,$(USEMODULE)))
  # select default prng if no prng is selected
  ifeq (,$(filter prng_%,$(USEMODULE)))
    USEMODULE += prng_tinymt32
  endif
endif

ifneq (,$(filter spiffs,$(USEMODULE)))
  USEPKG += spiffs
  USEMODULE += vfs
  USEMODULE += spiffs_fs
  USEMODULE += mtd
endif

ifneq (,$(filter littlefs,$(USEMODULE)))
  USEPKG += littlefs
  USEMODULE += vfs
  USEMODULE += littlefs_fs
  USEMODULE += mtd
endif

ifneq (,$(filter littlefs2,$(USEMODULE)))
  USEPKG += littlefs2
  USEMODULE += vfs
  USEMODULE += littlefs2_fs
  USEMODULE += mtd
endif

ifneq (,$(filter fatfs_vfs,$(USEMODULE)))
  USEPKG += fatfs
  USEMODULE += vfs
endif

ifneq (,$(filter nimble_%,$(USEMODULE)))
  USEPKG += nimble
endif

ifneq (,$(filter tlsf-malloc,$(USEMODULE)))
  USEPKG += tlsf
endif

ifneq (,$(filter tinydtls_sock_dtls, $(USEMODULE)))
    USEPKG += tinydtls
endif

# always select gpio (until explicit dependencies are sorted out)
FEATURES_OPTIONAL += periph_gpio

# always select power management if available
FEATURES_OPTIONAL += periph_pm

# always select provided architecture features
FEATURES_REQUIRED += $(filter arch_%,$(FEATURES_PROVIDED))

# always select CPU core features
FEATURES_REQUIRED += $(filter cpu_core_%,$(FEATURES_PROVIDED))

# don't use idle thread if architecture has needed support
FEATURES_OPTIONAL += no_idle_thread

ifneq (,$(filter libstdcpp,$(FEATURES_USED)))
  # Also use C++ if libstdc++ is used
  FEATURES_REQUIRED += cpp
endif

ifneq (,$(filter test_utils_interactive_sync,$(USEMODULE)))
  ifneq (,$(filter shell,$(USEMODULE)))
    DEFAULT_MODULE += test_utils_interactive_sync_shell
  endif
endif
