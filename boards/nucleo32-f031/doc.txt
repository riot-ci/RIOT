/**
@defgroup    boards_nucleo32-f031 STM32 Nucleo32-F031
@ingroup     boards_common_nucleo32
@brief       Support for the STM32 Nucleo32-F031

## Overview

The Nucleo32-F031 is a board from ST's Nucleo family supporting a ARM
Cortex-M0
STM32F031K6 microcontroller with 4Kb of SRAM and 32Kb of ROM Flash.

## Hardware

![Nucleo32-F031](https://raw.githubusercontent.com/wiki/RIOT-OS/RIOT/images/nucleo32-board.png)

### MCU

| MCU        | STM32F031K6       |
|:------------- |:--------------------- |
| Family | ARM Cortex-M0     |
| Vendor | ST Microelectronics   |
| RAM        | 4Kb |
| Flash      | 32Kb              |
| Frequency  | up to 48MHz) |
| FPU        | no                |
| Timers | 9 (2x watchdog, 1 SysTick, 5x 16-bit, 1x 32-bit)  |
| ADCs       | 1x 12-bit         |
| UARTs      | 1                 |
| SPIs       | 1                 |
| I2Cs       | 1                 |
| RTC        | 1                 |
| Vcc        | 2.0V - 3.6V           |
| Datasheet  | [Datasheet](http://www.st.com/en/evaluation-tools/nucleo-f031k6.html) |
| Reference Manual | [Reference Manual](http://www.st.com/resource/en/datasheet/stm32f031k6.pdf) |
| Programming Manual | [Programming Manual](http://www.st.com/resource/en/programming_manual/dm00051352.pdf) |
| Board Manual   | [Board Manual](http://www.st.com/resource/en/user_manual/dm00231744.pdf)|

## Implementation Status

| Device | ID        | Supported | Comments  |
|:------------- |:------------- |:------------- |:------------- |
| MCU        | STM32F031K6   | partly    | Energy saving modes not fully utilized |
| Low-level driver | GPIO    | yes       | |
|        | PWM       | yes (3 pins available)  |  |
|        | UART      | 1 UARTs       | USART1 via STLink/USB |
|        | ADC       | 5 pins        | |
|        | I2C       | no        | |
|        | SPI       | no        | |
|        | USB       | no        | |
|        | Timer     | 1 32 bit timers       | |

## Flashing the device
The ST Nucleo-F031 board includes an on-board ST-LINK V2-1 programmer. The
easiest way to program the board is to use OpenOCD. Once you have installed
OpenOCD (look [here](https://github.com/RIOT-OS/RIOT/wiki/OpenOCD) for
installation instructions), you can flash the board simply by typing

```
make BOARD=nucleo32-f031 flash
```
and debug via GDB by simply typing
```
make BOARD=nucleo32-f031 debug
```

## Supported Toolchains
For using the ST Nucleo32-F031 board we strongly recommend the usage of
the [GNU Tools for ARM Embedded Processors](https://launchpad.net/gcc-arm-embedded) toolchain.
 */
