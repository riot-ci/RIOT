# additional modules dependencies

ifneq (, $(filter lua, $(USEPKG)))
    USEMODULE += newlib_syscalls_default
    USEMODULE += xtimer
endif

ifneq (, $(filter lwip%, $(USEMODULE)))
    USEMODULE += newlib_syscalls_default
endif

ifneq (,$(filter ndn-riot,$(USEPKG)))
    USEMODULE += crypto
    USEMODULE += cipher_modes
endif

ifneq (, $(filter posix%, $(USEMODULE)))
    USEMODULE += newlib_syscalls_default
endif

ifneq (, $(filter shell, $(USEMODULE)))
    USEMODULE += newlib_syscalls_default
    USEMODULE += xtimer
endif

ifneq (, $(filter xtimer, $(USEMODULE)))
    USEMODULE += newlib_syscalls_default
endif

ifneq (, $(filter vfs, $(USEMODULE)))
    USEMODULE += newlib_syscalls_default
    USEMODULE += xtimer
endif

ifneq (, $(filter newlib_syscalls_default, $(USEMODULE)))
    USEMODULE += uart_stdio
endif

# network interface dependencies
ifneq (, $(filter netdev_default, $(USEMODULE)))
    # if NETDEV_DEFAULT is empty, we use module mrf24j40 as default network device
    ifndef NETDEV_DEFAULT
        USEMODULE += mrf24j40
    else
        USEMODULE += $(NETDEV_DEFAULT)
    endif
endif

# default parameter definitions when module enc28j60 is used
ifneq (, $(filter enc28j60, $(USEMODULE)))

    # avoid multiple definitions when package depenedencies are resolved recursively
    ifndef ENC28J60_PARAM_DEFINED
        export ENC28J60_PARAM_DEFINED = 1

        # default definitions
        ENC28J60_SPI ?= SPI_DEV\(0\)
        ENC28J60_CS  ?= GPIO4
        ENC28J60_INT ?= GPIO9
        ENC28J60_RST ?= GPIO10
        CFLAGS += -DENC28J60_PARAM_SPI=$(ENC28J60_SPI)
        CFLAGS += -DENC28J60_PARAM_CS=$(ENC28J60_CS)
        CFLAGS += -DENC28J60_PARAM_INT=$(ENC28J60_INT)
        CFLAGS += -DENC28J60_PARAM_RESET=$(ENC28J60_RST)

        # to satisfy variable defintions in tests/driver_enc28j60/Makefile
        ENC_SPI = $(ENC28J60_SPI)
        ENC_CS  = $(ENC28J60_CS)
        ENC_INT = $(ENC28J60_INT)
        ENC_RST = $(ENC28J60_RST)

    endif
endif


# default parameter definitions when module mfr24j40 is used
ifneq (, $(filter mrf24j40, $(USEMODULE)))

    # avoid multiple definitions when package depenedencies are resolved recursively
    ifndef MRF24J40_PARAM_DEFINED
        export MRF24J40_PARAM_DEFINED = 1

        # default definitions
        MRF24J40_SPI  = SPI_DEV\(0\)
        MRF24J40_CLK  = SPI_CLK_1MHZ
        MRF24J40_CS  ?= GPIO16
        MRF24J40_INT ?= GPIO0
        MRF24J40_RST ?= GPIO2
        CFLAGS += -DMRF24J40_PARAM_SPI=$(MRF24J40_SPI)
        CFLAGS += -DMRF24J40_PARAM_SPI_CLK=$(MRF24J40_CLK)
        CFLAGS += -DMRF24J40_PARAM_CS=$(MRF24J40_CS)
        CFLAGS += -DMRF24J40_PARAM_INT=$(MRF24J40_INT)
        CFLAGS += -DMRF24J40_PARAM_RESET=$(MRF24J40_RST)

    endif
endif
