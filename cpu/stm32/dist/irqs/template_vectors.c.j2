/*
 * PLEASE DON'T EDIT
 *
 * This file was automatically generated by
 * ./cpu/stm32/dist/irqs/gen_vectors.py
 */

#include "vectors_cortexm.h"

/* define a local dummy handler as it needs to be in the same compilation unit
 * as the alias definition */
void dummy_handler(void) {
    dummy_handler_default();
}

/* {{ cpu_line }} specific interrupt vectors */
{% set vars = {'exti': False} %}
{% for isr in isrs %}
    {% if isr.func == "exti" %}
        {% if not vars.exti %}
WEAK_DEFAULT void isr_{{ isr.func }}(void);
        {% if vars.update({'exti': True}) %}{% endif %}
        {% endif %}
    {% endif %}
    {% if isr.func != "exti" %}
WEAK_DEFAULT void isr_{{ isr.func }}(void);
    {% endif %}
{% endfor %}

/* CPU specific interrupt vector table */
ISR_VECTOR(1) const isr_t vector_cpu[CPU_IRQ_NUMOF] = {
{% for isr in isrs %}
    [{{ "%-35s" | format(isr.irq) }}] = isr_{{ isr.func }},
{% endfor %}
};
