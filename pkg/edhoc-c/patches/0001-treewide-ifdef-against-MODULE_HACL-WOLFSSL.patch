From 7f734a22b8e6da0315e6ac4f6a1289437b642eb9 Mon Sep 17 00:00:00 2001
From: Francisco Molina <femolina@uc.cl>
Date: Wed, 7 Apr 2021 20:28:52 +0200
Subject: [PATCH 1/2] treewide: ifdef against MODULE_HACL/WOLFSSL

---
 src/cbor/nanocbor.c  |  4 ++--
 src/cose.c           | 14 +++++++-------
 src/credentials.c    |  8 ++++----
 src/crypto.h         |  4 ++--
 src/crypto/hacl.c    |  2 +-
 src/crypto/wolfssl.c |  2 +-
 src/format.c         | 28 ++++++++++++++--------------
 src/process.c        | 24 ++++++++++++------------
 8 files changed, 43 insertions(+), 43 deletions(-)

diff --git a/src/cbor/nanocbor.c b/src/cbor/nanocbor.c
index 301e8af..b4e17ff 100644
--- a/src/cbor/nanocbor.c
+++ b/src/cbor/nanocbor.c
@@ -1,6 +1,6 @@
 #include <edhoc/edhoc.h>
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 #include <nanocbor/nanocbor.h>
 #include <memory.h>
@@ -10,7 +10,7 @@
 #include "cbor.h"
 
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 void cbor_init_decoder(void *decoder, const uint8_t *buffer, size_t len) {
     nanocbor_decoder_init((nanocbor_value_t *) decoder, buffer, len);
diff --git a/src/cose.c b/src/cose.c
index feb5150..f6a1b8d 100644
--- a/src/cose.c
+++ b/src/cose.c
@@ -1,7 +1,7 @@
 #include <string.h>
 #include "edhoc/edhoc.h"
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 #include "nanocbor/nanocbor.h"
 
@@ -72,7 +72,7 @@ int cose_key_from_cbor(cose_key_t *key, const uint8_t *in, size_t ilen) {
     const uint8_t *p;
     int8_t found_x, found_d;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
@@ -227,7 +227,7 @@ static int internal_header_serialize(void *encoder, cose_header_t *header, ssize
 ssize_t cose_header_serialized_len(cose_header_t *header) {
     ssize_t ret, tmp;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -247,7 +247,7 @@ ssize_t cose_header_serialized_len(cose_header_t *header) {
 int cose_header_serialize(cose_header_t *header, uint8_t *out, size_t olen) {
     ssize_t ret, tmp;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -272,7 +272,7 @@ int cose_header_parse(cose_header_t *header, const uint8_t *in, size_t ilen) {
 
     size_t _tmp;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t decoder;
     nanocbor_value_t map;
     nanocbor_value_t array;
@@ -484,7 +484,7 @@ static ssize_t cose_message_base_structure(cose_message_t *coseMsgCtx,
                                            size_t olen) {
     ssize_t ret, offset, coseHdrLen;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -533,7 +533,7 @@ ssize_t cose_encrypt0_create_adata(cose_encrypt0_t *coseMsgCtx, uint8_t *out, si
 ssize_t cose_sign1_create_to_be_signed(cose_sign1_t *coseMsgCtx, uint8_t *out, size_t olen) {
     ssize_t ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
diff --git a/src/credentials.c b/src/credentials.c
index b2556b4..8ffcafa 100644
--- a/src/credentials.c
+++ b/src/credentials.c
@@ -5,7 +5,7 @@
 #include "edhoc/credentials.h"
 #include "cbor.h"
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 #include <nanocbor/nanocbor.h>
 #elif defined(EMPTY_CBOR)
@@ -54,7 +54,7 @@ int cred_x509_from_der(void *x509Ctx, const uint8_t *in, size_t ilen) {
     const uint8_t *p;
     size_t len;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
@@ -127,7 +127,7 @@ int cred_id_from_cbor(cred_id_t *credIdCtx, const uint8_t *in, size_t ilen) {
 int cred_c509_from_cbor(c509_t *c509Ctx, const uint8_t *in, size_t ilen) {
     int ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
@@ -194,7 +194,7 @@ int cred_rpk_from_cbor(rpk_t *rpkCtx, const uint8_t *in, size_t ilen) {
     int ret;
     size_t subject_name_len;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
diff --git a/src/crypto.h b/src/crypto.h
index f97e1a4..df345bc 100644
--- a/src/crypto.h
+++ b/src/crypto.h
@@ -2,12 +2,12 @@
 #define EDHOC_CRYPTO_INTERNAL_H
 
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
 
 #include <wolfssl/options.h>
 #include <wolfssl/wolfcrypt/sha256.h>
 
-#elif defined(HACL)
+#elif defined(MODULE_HACL)
 
 #define HASH_INPUT_BLEN     (256)
 
diff --git a/src/crypto/hacl.c b/src/crypto/hacl.c
index 16dee47..8075ef4 100644
--- a/src/crypto/hacl.c
+++ b/src/crypto/hacl.c
@@ -2,7 +2,7 @@
 #include "edhoc/edhoc.h"
 #include "crypto.h"
 
-#if defined(HACL)
+#if defined(MODULE_HACL)
 
 #include <EverCrypt_Curve25519.h>
 #include <Lib_RandomBuffer_System.h>
diff --git a/src/crypto/wolfssl.c b/src/crypto/wolfssl.c
index 29bf022..4fda107 100644
--- a/src/crypto/wolfssl.c
+++ b/src/crypto/wolfssl.c
@@ -3,7 +3,7 @@
 #include "edhoc/edhoc.h"
 #include "crypto.h"
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
 
 // do not remove
 #include <wolfssl/options.h>
diff --git a/src/format.c b/src/format.c
index c484cd6..b51fed2 100644
--- a/src/format.c
+++ b/src/format.c
@@ -13,7 +13,7 @@
 #error "No X509 backend enabled"
 #endif
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 #include <nanocbor/nanocbor.h>
 
@@ -111,7 +111,7 @@ static int verify_cipher_suite(uint8_t preferredSuite, const uint8_t *alternativ
 ssize_t format_msg1_encode(const edhoc_msg1_t *msg1, uint8_t *out, size_t olen) {
     ssize_t ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -171,7 +171,7 @@ int format_msg1_decode(edhoc_msg1_t *msg1, const uint8_t *in, size_t ilen) {
 
     const uint8_t *p;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t decoder;
     nanocbor_encoder_t arr;
 #elif defined(EMPTY_CBOR)
@@ -255,7 +255,7 @@ int format_msg1_decode(edhoc_msg1_t *msg1, const uint8_t *in, size_t ilen) {
 ssize_t format_msg2_encode(const edhoc_msg2_t *msg2, corr_t corr, uint8_t *out, size_t olen) {
     ssize_t ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -284,7 +284,7 @@ int format_msg2_decode(edhoc_msg2_t *msg2,
     int ret;
     const uint8_t *p;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
@@ -353,7 +353,7 @@ int format_msg2_decode(edhoc_msg2_t *msg2,
 ssize_t format_msg3_encode(const edhoc_msg3_t *msg3, corr_t corr, uint8_t *out, size_t olen) {
     ssize_t ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -377,7 +377,7 @@ ssize_t format_msg3_encode(const edhoc_msg3_t *msg3, corr_t corr, uint8_t *out,
 int format_msg3_decode(edhoc_msg3_t *msg3, corr_t corr, const uint8_t *msg3_buf, size_t msg3_len) {
     int ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t decoder;
 #elif defined(EMPTY_CBOR)
     int decoder;
@@ -411,7 +411,7 @@ int format_msg3_decode(edhoc_msg3_t *msg3, corr_t corr, const uint8_t *msg3_buf,
 }
 
 ssize_t format_data2_encode(const edhoc_data2_t *data2, corr_t corr, uint8_t *out, size_t olen) {
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -449,7 +449,7 @@ ssize_t format_data2_encode(const edhoc_data2_t *data2, corr_t corr, uint8_t *ou
 ssize_t format_data3_encode(const edhoc_data3_t *data3, corr_t corr, uint8_t *out, size_t olen) {
     int ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -479,7 +479,7 @@ ssize_t format_info_encode(cose_algo_id_t id,
                            size_t len,
                            uint8_t *out,
                            size_t olen) {
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t encoder;
 #elif defined(EMPTY_CBOR)
     int encoder;
@@ -505,7 +505,7 @@ ssize_t format_external_data_encode(const uint8_t *th,
                                     uint8_t *out,
                                     size_t olen) {
     ssize_t ret, offset;
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
@@ -551,7 +551,7 @@ int format_plaintext23_decode(edhoc_plaintext23_t *plaintext, uint8_t *in, size_
     int ret;
     int8_t cborType;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_value_t dec;
     nanocbor_value_t _dec;
 #elif defined(EMPTY_CBOR)
@@ -605,7 +605,7 @@ ssize_t format_plaintext23_encode(const edhoc_plaintext23_t *plaintext, uint8_t
 
     int headerItems;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
@@ -664,7 +664,7 @@ ssize_t format_plaintext23_encode(const edhoc_plaintext23_t *plaintext, uint8_t
 ssize_t format_error_msg_encode(const edhoc_error_msg_t *errMsg, uint8_t *out, size_t olen) {
     ssize_t ret;
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
diff --git a/src/process.c b/src/process.c
index afd7090..43d57aa 100644
--- a/src/process.c
+++ b/src/process.c
@@ -1,7 +1,7 @@
 #include <string.h>
 #include <time.h>
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
 
 #include <nanocbor/nanocbor.h>
 
@@ -38,11 +38,11 @@ ssize_t edhoc_create_msg1(edhoc_ctx_t *ctx, corr_t corr, method_t m, cipher_suit
 
     edhoc_msg1_t msg1;
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
     wc_Sha256 hashCtx;
 #elif defined(EMPTY_CRYPTO)
     int hashCtx;
-#elif defined(HACL)
+#elif defined(MODULE_HACL)
     hash_ctx_t hashCtx;
 #elif
 #error "No crypto backend enabled."
@@ -137,17 +137,17 @@ ssize_t edhoc_create_msg2(edhoc_ctx_t *ctx, const uint8_t *in, size_t ilen, uint
     ad_cb_t ad2;
     cred_type_t credType;
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
     wc_Sha256 hashCtx;
 #elif defined(EMPTY_CRYPTO)
     int hashCtx;
-#elif defined(HACL)
+#elif defined(MODULE_HACL)
     hash_ctx_t hashCtx;
 #else
 #error "No crypto backend enabled"
 #endif
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
@@ -385,17 +385,17 @@ ssize_t edhoc_create_msg3(edhoc_ctx_t *ctx, const uint8_t *in, size_t ilen, uint
     const uint8_t *remoteCred;
     size_t remoteCredLen;
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
     wc_Sha256 hashCtx;
 #elif defined(EMPTY_X509)
     int hashCtx;
-#elif defined(HACL)
+#elif defined(MODULE_HACL)
     hash_ctx_t hashCtx;
 #else
 #error "No crypto backend enabled"
 #endif
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
@@ -692,17 +692,17 @@ ssize_t edhoc_resp_finalize(edhoc_ctx_t *ctx, const uint8_t *in, size_t ilen, bo
     const uint8_t *remoteCred;
     size_t remoteCredLen;
 
-#if defined(WOLFSSL)
+#if defined(MODULE_WOLFSSL)
     wc_Sha256 hashCtx;
 #elif defined(EMPTY_X509)
     int hashCtx;
-#elif defined(HACL)
+#elif defined(MODULE_HACL)
     hash_ctx_t hashCtx;
 #else
 #error "No crypto backend enabled"
 #endif
 
-#if defined(NANOCBOR)
+#if defined(MODULE_NANOCBOR)
     nanocbor_encoder_t enc;
 #elif defined(EMPTY_CBOR)
     int enc;
-- 
2.28.0

