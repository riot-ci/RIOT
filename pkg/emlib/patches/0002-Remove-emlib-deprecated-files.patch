From fe00d8e3ddc82505ce66ba292d1612d4cc82d2a9 Mon Sep 17 00:00:00 2001
From: Bas Stottelaar <basstottelaar@gmail.com>
Date: Tue, 31 Oct 2017 17:30:21 +0100
Subject: [PATCH 2/2] Remove emlib deprecated files.

---
 emlib/inc/em_int.h | 127 -----------------------------------------------------
 emlib/src/em_int.c |  78 --------------------------------
 2 files changed, 205 deletions(-)
 delete mode 100644 emlib/inc/em_int.h
 delete mode 100644 emlib/src/em_int.c

diff --git a/emlib/inc/em_int.h b/emlib/inc/em_int.h
deleted file mode 100644
index f43f7448..00000000
--- a/emlib/inc/em_int.h
+++ /dev/null
@@ -1,127 +0,0 @@
-/***************************************************************************//**
- * @file em_int.h
- * @brief Interrupt enable/disable unit API
- * @version 5.3.3
- *******************************************************************************
- * # License
- * <b>Copyright 2016 Silicon Laboratories, Inc. http://www.silabs.com</b>
- *******************************************************************************
- *
- * Permission is granted to anyone to use this software for any purpose,
- * including commercial applications, and to alter it and redistribute it
- * freely, subject to the following restrictions:
- *
- * 1. The origin of this software must not be misrepresented; you must not
- *    claim that you wrote the original software.
- * 2. Altered source versions must be plainly marked as such, and must not be
- *    misrepresented as being the original software.
- * 3. This notice may not be removed or altered from any source distribution.
- *
- * DISCLAIMER OF WARRANTY/LIMITATION OF REMEDIES: Silicon Labs has no
- * obligation to support this Software. Silicon Labs is providing the
- * Software "AS IS", with no express or implied warranties of any kind,
- * including, but not limited to, any implied warranties of merchantability
- * or fitness for any particular purpose or warranties against infringement
- * of any proprietary rights of a third party.
- *
- * Silicon Labs will not be liable for any consequential, incidental, or
- * special damages, or any other relief, or for any claim by any third party,
- * arising from your use of this Software.
- *
- ******************************************************************************/
-
-#ifndef EM_INT_H
-#define EM_INT_H
-
-#include "em_device.h"
-
-extern uint32_t INT_LockCnt;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-/** @cond DO_NOT_INCLUDE_WITH_DOXYGEN */
-#ifndef UINT32_MAX
-#define UINT32_MAX ((uint32_t)(0xFFFFFFFF))
-#endif
-
-#warning "The INT module is deprecated and marked for removal in a later release. Please use the new CORE module instead. See \"Porting from em_int\" in the CORE documentation for instructions."
-
-/** @endcond */
-
-/***************************************************************************//**
- * @addtogroup emlib
- * @{
- ******************************************************************************/
-
-/***************************************************************************//**
- * @addtogroup INT
- * @{
- ******************************************************************************/
-
-/***************************************************************************//**
- * @brief
- *   Disable interrupts.
- *
- * @deprecated
- *   This function is deprecated and marked for removal in a later release.
- *   Please use the new CORE module instead.
- *
- * @details
- *   Disable interrupts and increment lock level counter.
- *
- * @return
- *   The resulting interrupt disable nesting level.
- *
- ******************************************************************************/
-__STATIC_INLINE uint32_t INT_Disable(void)
-{
-  __disable_irq();
-  if (INT_LockCnt < UINT32_MAX) {
-    INT_LockCnt++;
-  }
-
-  return INT_LockCnt;
-}
-
-/***************************************************************************//**
- * @brief
- *   Enable interrupts.
- *
- * @deprecated
- *   This function is deprecated and marked for removal in a later release.
- *   Please use the new CORE module instead.
- *
- * @return
- *   The resulting interrupt disable nesting level.
- *
- * @details
- *   Decrement interrupt lock level counter and enable interrupts if counter
- *   reached zero.
- *
- ******************************************************************************/
-__STATIC_INLINE uint32_t INT_Enable(void)
-{
-  uint32_t retVal;
-
-  if (INT_LockCnt > 0) {
-    INT_LockCnt--;
-    retVal = INT_LockCnt;
-    if (retVal == 0) {
-      __enable_irq();
-    }
-    return retVal;
-  } else {
-    return 0;
-  }
-}
-
-/** @} (end addtogroup INT) */
-/** @} (end addtogroup emlib) */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif /* EM_INT_H */
diff --git a/emlib/src/em_int.c b/emlib/src/em_int.c
deleted file mode 100644
index 02f35b00..00000000
--- a/emlib/src/em_int.c
+++ /dev/null
@@ -1,78 +0,0 @@
-/***************************************************************************//**
- * @file em_int.c
- * @brief Interrupt enable/disable unit API
- * @version 5.3.3
- ******************************************************************************
- * # License
- * <b>Copyright 2016 Silicon Laboratories, Inc. http://www.silabs.com</b>
- *******************************************************************************
- *
- * Permission is granted to anyone to use this software for any purpose,
- * including commercial applications, and to alter it and redistribute it
- * freely, subject to the following restrictions:
- *
- * 1. The origin of this software must not be misrepresented; you must not
- *    claim that you wrote the original software.
- * 2. Altered source versions must be plainly marked as such, and must not be
- *    misrepresented as being the original software.
- * 3. This notice may not be removed or altered from any source distribution.
- *
- * DISCLAIMER OF WARRANTY/LIMITATION OF REMEDIES: Silicon Labs has no
- * obligation to support this Software. Silicon Labs is providing the
- * Software "AS IS", with no express or implied warranties of any kind,
- * including, but not limited to, any implied warranties of merchantability
- * or fitness for any particular purpose or warranties against infringement
- * of any proprietary rights of a third party.
- *
- * Silicon Labs will not be liable for any consequential, incidental, or
- * special damages, or any other relief, or for any claim by any third party,
- * arising from your use of this Software.
- *
- ******************************************************************************/
-
-#include <stdint.h>
-#include "em_int.h"
-
-/***************************************************************************//**
- * @addtogroup emlib
- * @{
- ******************************************************************************/
-
-/***************************************************************************//**
- * @addtogroup INT
- * @brief Safe nesting of interrupt disable/enable API
- * @{
- * @deprecated
- *   These functions are deprecated and marked for removal in a later release.
- *   Please use the @ref CORE module instead. See @ref core_porting for
- *   information on how to convert existing code bases to use @ref CORE.
- *
- * @details
- *  This module contains functions to safely disable and enable interrupts
- *  at CPU level. INT_Disable() disables interrupts globally and increments a lock
- *  level counter (counting semaphore). INT_Enable() decrements the lock level
- *  counter and enable interrupts if the counter reaches zero.
- *
- *  These functions would normally be used to secure critical regions, and
- *  to make sure that a critical section that calls into another critical
- *  section does not unintentionally terminate the callee critical section.
- *
- *  These functions should also be used inside interrupt handlers:
- *  @verbatim
- *  void SysTick_Handler(void)
- *  {
- *    INT_Disable();
- *      .
- *      .
- *      .
- *    INT_Enable();
- *  }
- * @endverbatim
- ******************************************************************************/
-
-/** Interrupt lock level counter. Set to zero initially as we normally enter
- * main with interrupts enabled  */
-uint32_t INT_LockCnt = 0;
-
-/** @} (end addtogroup INT) */
-/** @} (end addtogroup emlib) */
-- 
2.14.2

