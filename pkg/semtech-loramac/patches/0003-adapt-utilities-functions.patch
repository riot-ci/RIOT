From d45bb31d31b37b91ad0a3c141bc80de67d3b7643 Mon Sep 17 00:00:00 2001
From: Alexandre Abadie <alexandre.abadie@inria.fr>
Date: Tue, 16 Jan 2018 15:04:09 +0100
Subject: [PATCH] patch utilities functions

---
 src/boards/mcu/stm32/utilities.c | 53 ----------------------------------------
 src/boards/mcu/stm32/utilities.h | 35 ++++++++++++++++++++++----
 2 files changed, 30 insertions(+), 58 deletions(-)

diff --git a/src/boards/mcu/stm32/utilities.c b/src/boards/mcu/stm32/utilities.c
index 8861235..620829f 100644
--- a/src/boards/mcu/stm32/utilities.c
+++ b/src/boards/mcu/stm32/utilities.c
@@ -14,7 +14,6 @@ Maintainer: Miguel Luis and Gregory Cristian
 */
 #include <stdlib.h>
 #include <stdio.h>
-#include "board.h"
 #include "utilities.h"
 
 /*!
@@ -31,55 +30,3 @@ int32_t rand1( void )
 {
     return ( ( next = next * 1103515245L + 12345L ) % RAND_LOCAL_MAX );
 }
-
-void srand1( uint32_t seed )
-{
-    next = seed;
-}
-// Standard random functions redefinition end
-
-int32_t randr( int32_t min, int32_t max )
-{
-    return ( int32_t )rand1( ) % ( max - min + 1 ) + min;
-}
-
-void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size )
-{
-    while( size-- )
-    {
-        *dst++ = *src++;
-    }
-}
-
-void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size )
-{
-    dst = dst + ( size - 1 );
-    while( size-- )
-    {
-        *dst-- = *src++;
-    }
-}
-
-void memset1( uint8_t *dst, uint8_t value, uint16_t size )
-{
-    while( size-- )
-    {
-        *dst++ = value;
-    }
-}
-
-int8_t Nibble2HexChar( uint8_t a )
-{
-    if( a < 10 )
-    {
-        return '0' + a;
-    }
-    else if( a < 16 )
-    {
-        return 'A' + ( a - 10 );
-    }
-    else
-    {
-        return '?';
-    }
-}
diff --git a/src/boards/mcu/stm32/utilities.h b/src/boards/mcu/stm32/utilities.h
index cc5e7e9..8e8aaee 100644
--- a/src/boards/mcu/stm32/utilities.h
+++ b/src/boards/mcu/stm32/utilities.h
@@ -15,6 +15,9 @@ Maintainer: Miguel Luis and Gregory Cristian
 #ifndef __UTILITIES_H__
 #define __UTILITIES_H__
 
+#include "semtech-loramac/board.h"
+#include "random.h"
+
 /*!
  * \brief Returns the minimum value between a and b
  *
@@ -46,7 +49,10 @@ Maintainer: Miguel Luis and Gregory Cristian
  *
  * \param [IN] seed Pseudo random generator initial value
  */
-void srand1( uint32_t seed );
+inline void srand1( uint32_t seed )
+{
+    (void) seed;
+};
 
 /*!
  * \brief Computes a random number between min and max
@@ -55,7 +61,10 @@ void srand1( uint32_t seed );
  * \param [IN] max range maximum value
  * \retval random random value in range min..max
  */
-int32_t randr( int32_t min, int32_t max );
+static inline int32_t randr( int32_t min, int32_t max )
+{
+    return random_uint32_range(min, max + 1);
+};
 
 /*!
  * \brief Copies size elements of src array to dst array
@@ -66,7 +75,12 @@ int32_t randr( int32_t min, int32_t max );
  * \param [IN]  src  Source array
  * \param [IN]  size Number of bytes to be copied
  */
-void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size );
+inline void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size )
+{
+    while (size--) {
+        *dst++ = *src++;
+    }
+};
 
 /*!
  * \brief Copies size elements of src array to dst array reversing the byte order
@@ -75,7 +89,13 @@ void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size );
  * \param [IN]  src  Source array
  * \param [IN]  size Number of bytes to be copied
  */
-void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size );
+inline void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size )
+{
+    dst = dst + (size - 1);
+    while (size--) {
+        *dst-- = *src++;
+    }
+}
 
 /*!
  * \brief Set size elements of dst array with value
@@ -86,7 +106,12 @@ void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size );
  * \param [IN]  value Default value
  * \param [IN]  size  Number of bytes to be copied
  */
-void memset1( uint8_t *dst, uint8_t value, uint16_t size );
+inline void memset1( uint8_t *dst, uint8_t value, uint16_t size )
+{
+    while (size--) {
+        *dst++ = value;
+    }
+}
 
 /*!
  * \brief Converts a nibble to an hexadecimal character
-- 
2.14.1

